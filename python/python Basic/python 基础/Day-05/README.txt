def 语句定义函数：
    def 函数名(参数列表):
        函数体(代码块)
        [return 返回值]
    函数名就是标识符，命名要求一样
    语句块必须缩进，约定4个空格
    python的函数没有return语句，隐式会返回一个None值
    定义中的参数列表成为形式函数，只是一种符号表达，简称形参
调用：
    函数定义，只是声明了一个函数，它不会被执行，需要调用
    调用的方式看，就是函数名加上小括号，括号内写上参数
    调用时写的参数是实际参数，是实实在在传入的值，简称实参

函数介绍
    raise() 
函数参数：
    参数调用时传入的参数要和定义的个数相同(可变参数chuw)

    位置参数：
        def f(x,y,z) 调用时使用f(1,2,3)
        按照参数定义顺序传入实参
    关键字参数:
        def f(x,y,z)调用时f(x=1,y=2,z=3)
        使用形参的名字来传入实参的方式，如果使用了形参名字，那么传参顺序就可和定义顺序不同
    传参：
        f(z=None,y=10,x=[1])
        f((1,),z=6,y=4.1)
        f(y=5,z=6,2)   # 警告
        要求位置参数必须在关键字参数之前传入，位置参数时按位置对应的
函数参数的默认值:
    作用：
        参数的默认值可以在未传入足够的实参的时候，对没有给定的参数赋值为默认值
        参数非常多的时候，并不需要用户每次都输入所以的参数，简化函数调用
    举例：
        定义一个函数 login,参数名称为：host、port、username、password

可变参数：
    总结：
        有位置可变参数和关键字可变参数
        位置可变参数在形参前使用一个星号*
        关键字可变参数在形参前使用两个星号**
        位置可变参数和关键字可变参数都可以收集若干个实参，位置可变参数收集形参一个tuple，关键字可变参数收集形成一个dict
        混合使用参数的时候，可变参数要放到参数列表的最后，普通参数需要放到参数列表前面，位置可变参数需要在关键字可变参数之前
keyword-only 参数
    keyword-only参数(Python3加入)
        如果在一个星号参数后，或者一个位置可变参数后，出现的普通参数，实际上已经不是普通参数了，
        而是keyword-only参数

函数参数
    参数规则：
        参数列表参数一般顺序是：普通参数、缺省参数、可变位置参数、keyword-only参数(可带缺省值)、可变关键参数
        def fn(x,y,z=3,*args,m-4,n,**kwargs):
            print(x,y,z,m,n)
            print(args)
            print(kwargs)
        fn(1,2,n=4)
        
    #注意：
        代码应该是易读易懂，而不是为难别人
        请按照书写习惯定义函数参数

